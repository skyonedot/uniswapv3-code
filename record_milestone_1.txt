PRIVATE_KEY=0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80

forge script scripts/DeployDevelopment.s.sol --broadcast --fork-url http://localhost:8545 --private-key $PRIVATE_KEY  --code-size-limit 50000

WETH=0x5FbDB2315678afecb367f032d93F642f64180aa3 && USDC=0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512 && POOL=0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0 && MANAGER=0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9


cast send $WETH "approve(address,uint256)(bool)" $MANAGER 1000000000000000000000000000000000000 --private-key=$PRIVATE_KEY
cast send $USDC "approve(address,uint256)(bool)" $MANAGER 1000000000000000000000000000000000000 --private-key=$PRIVATE_KEY


这个data字段 是 开了一个test 然后abi.encode进去
```
// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.14;

import "forge-std/Test.sol";
import "forge-std/console.sol";
contract TT is Test {


    function testAAA() public {
        address token0 = 0x5FbDB2315678afecb367f032d93F642f64180aa3;
        address token1 = 0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512;
        address msgSender = 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266;
        console.logBytes(abi.encode(token0, token1, msgSender));
    }
}
```

cast send $MANAGER "mint(address,int24,int24,uint128,bytes)" $POOL 84222 86129 1517882343751509868544 "0x0000000000000000000000005fbdb2315678afecb367f032d93f642f64180aa3000000000000000000000000e7f1725e7734ce288f8367e1bb143e90bb3f0512000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266" --private-key=$PRIVATE_KEY


cast call $WETH "balanceOf(address)(uint256)" $POOL
cast call $USDC "balanceOf(address)(uint256)" $POOL

cast call $USDC "balanceOf(address)(uint256)" $WALLET
cast call $WETH "balanceOf(address)(uint256)" $WALLET

这里swap的data继续沿用上面， 一致即可。
cast send $MANAGER "swap(address,bytes)" $POOL "0x0000000000000000000000005fbdb2315678afecb367f032d93f642f64180aa3000000000000000000000000e7f1725e7734ce288f8367e1bb143e90bb3f0512000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266" --private-key=$PRIVATE_KEY


